#!/usr/bin/ansible-playbook
---

- name: "create base dir"
  hosts: "all"
  user: "root"
  vars:
    base_dir: "/var/rails"
  tasks:
  - debug:
      var: "global.rails.dir"
  - file:
      path: "{{base_dir}}"
      state: "directory"
      owner: "railsapp"
      group: "railsapp"
      mode: 0770

- name: "Updates Rails Webservice"
  hosts: "all"
  user: "root"
  become: true
  become_user: "railsapp"
  vars:
    jetzt: "{{ansible_date_time.date}}_{{ansible_date_time.time|replace(':', '-')}}"
    temp_dir: "/tmp/ansible-railsapp"
  tasks:
  - assert:
      msg: "Use --limit!"
      that: "ansible_limit is defined"
        
  - file:
      path: "{{temp_dir}}"
      state: "absent"

  - git:
      repo: "{{global.git_repo_url}}"
      dest: "{{temp_dir}}"
 
  - stat:
      path: "{{global.rails.dir}}"
    register: "s"

  - name: "backup"
    command: "mv {{global.rails.dir}} {{global.rails.dir}}.backup{{jetzt}}"
    when: "s.stat.exists"

  - name: "mv"
    command: "mv {{temp_dir}}/webservice/railsapp {{global.rails.dir}}"

  - file:
      path: "{{temp_dir}}"
      state: "absent"

  - name: "switch to local installation of gems in vendor/bundle"
    command:
      cmd: "/usr/local/bin/bundle config set deployment 'true'"
    args:
      chdir: "{{global.rails.dir}}"
    register: "c"

  - debug:
      var: "{{item}}"
    loop:
    - "c.stdout_lines"
    - "c.stderr_lines"

  - name: "Install needed gems with bundle"
    command:
      cmd: "/usr/local/bin/bundle install"
    args:
      chdir: "{{global.rails.dir}}"
    register: "c"

  - debug:
      var: "{{item}}"
    loop:
    - "c.stdout_lines"
    - "c.stderr_lines"
